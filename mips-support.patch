diff -ru qemu-linaro-0.15.91-2011.11/linux-user/main.c ../qemu-linaro-0.15.91-2011.11/linux-user/main.c
--- qemu-linaro-0.15.91-2011.11/linux-user/main.c	2011-11-08 17:52:44.000000000 +0100
+++ ../qemu-linaro-0.15.91-2011.11/linux-user/main.c	2011-12-02 21:12:37.126927880 +0100
@@ -33,6 +33,8 @@
 #include "tcg.h"
 #include "qemu-timer.h"
 #include "envlist.h"
+#include <sys/resource.h>
+
 
 #define DEBUG_LOGFILE "/tmp/qemu.log"
 
@@ -3365,6 +3367,17 @@
         fprintf(stderr, "Unable to find CPU definition\n");
         exit(1);
     }
+    
+#if defined(TARGET_MIPS)
+    {
+		//Set OPEN_MAX on 1024
+		struct rlimit rlim1;
+		rlim1.rlim_cur=1024;
+		rlim1.rlim_max=1024;
+		setrlimit(5, &rlim1);
+	}
+#endif //#if defined(TARGET_MIPS)
+    
 #if defined(TARGET_I386) || defined(TARGET_SPARC) || defined(TARGET_PPC)
     cpu_reset(env);
 #endif
Only in ../qemu-linaro-0.15.91-2011.11/linux-user: main.c.orig
Only in ../qemu-linaro-0.15.91-2011.11/linux-user: main.c.rej
diff -ru qemu-linaro-0.15.91-2011.11/linux-user/syscall.c ../qemu-linaro-0.15.91-2011.11/linux-user/syscall.c
--- qemu-linaro-0.15.91-2011.11/linux-user/syscall.c	2011-11-08 17:52:44.000000000 +0100
+++ ../qemu-linaro-0.15.91-2011.11/linux-user/syscall.c	2011-12-02 21:24:11.386700617 +0100
@@ -95,6 +95,7 @@
 #endif
 #include <linux/fb.h>
 #include <linux/vt.h>
+#include <sys/epoll.h>
 #include "linux_loop.h"
 #include "cpu-uname.h"
 
@@ -1163,6 +1164,17 @@
         return host_pipe[0];
 #elif defined(TARGET_MIPS)
         ((CPUMIPSState*)cpu_env)->active_tc.gpr[3] = host_pipe[1];
+        
+    {
+		unsigned short val1=0;
+		val1 = (abi_long)(host_pipe[0] & 0xFFFFFFFF);
+	
+		abi_long *par;
+		*(&par) = (abi_long *)((CPUMIPSState*)cpu_env)->active_tc.gpr[4];
+		par[0]= val1;
+		par[1]= host_pipe[1];
+	}
+        
         return host_pipe[0];
 #elif defined(TARGET_SH4)
         ((CPUSH4State*)cpu_env)->gregs[1] = host_pipe[1];
@@ -3020,8 +3032,12 @@
         break;
 
     case IPCOP_semctl:
-        ret = do_semctl(first, second, third, (union target_semun)(abi_ulong) ptr);
-        break;
+        {
+            union target_semun *target_su;
+            target_su=(union target_semun *)(abi_ulong)ptr;
+            ret = do_semctl(first, second, third, *target_su);
+            break;
+        }
 
     case IPCOP_msgget:
         ret = get_errno(msgget(first, second));
@@ -6889,13 +6905,21 @@
     case TARGET_NR_pread64:
         if (!(p = lock_user(VERIFY_WRITE, arg2, arg3, 0)))
             goto efault;
-        ret = get_errno(pread64(arg1, p, arg3, target_offset64(arg4, arg5)));
+#if defined(TARGET_MIPS)
+		ret = get_errno(pread64(arg1, p, arg3, target_offset64(arg5, arg4)));
+#else
+		ret = get_errno(pread64(arg1, p, arg3, target_offset64(arg4, arg5)));
+#endif
         unlock_user(p, arg2, ret);
         break;
     case TARGET_NR_pwrite64:
         if (!(p = lock_user(VERIFY_READ, arg2, arg3, 1)))
             goto efault;
+#if defined(TARGET_MIPS)
+		ret = get_errno(pwrite64(arg1, p, arg3, target_offset64(arg5, arg4)));
+#else
         ret = get_errno(pwrite64(arg1, p, arg3, target_offset64(arg4, arg5)));
+#endif
         unlock_user(p, arg2, 0);
         break;
 #endif
